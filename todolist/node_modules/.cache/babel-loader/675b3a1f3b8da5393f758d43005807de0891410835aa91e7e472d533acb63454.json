{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\minju\\\\git\\\\todolist_front\\\\todolist\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { GoogleLogin } from '@react-oauth/google';\nimport KakaoLogin from 'react-kakao-login'; // 카카오 로그인 컴포넌트\nimport axios from 'axios'; // axios 임포트\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [isNicknameModalOpen, setNicknameModalOpen] = useState(false); // 닉네임 입력창 상태\n  const [userInfo, setUserInfo] = useState(null); // 로그인 후 사용자 정보 저장\n  const [nickname, setNickname] = useState(''); // 사용자 닉네임\n\n  // Google 로그인 성공 시 호출되는 함수\n  const handleGoogleLoginSuccess = async response => {\n    console.log('Google Login Success:', response);\n    const decoded = JSON.parse(atob(response.credential.split('.')[1])); // 구글 토큰 디코딩\n    const email = decoded.email; // 이메일\n    const nickname = decoded.given_name; // 이름\n\n    // 구글 로그인 후 사용자 정보를 상태에 저장\n    setUserInfo({\n      email,\n      nickname,\n      provider: 'google'\n    });\n    setNicknameModalOpen(true); // 닉네임 입력 창 띄우기\n  };\n\n  // Google 로그인 실패 시 호출되는 함수\n  const handleGoogleLoginFailure = error => {\n    console.error('Google Login Failed:', error);\n    alert('Google 로그인에 실패했습니다. 다시 시도해주세요.');\n  };\n\n  // Kakao 로그인 성공 시 호출되는 함수\n  const handleKakaoLoginSuccess = async response => {\n    console.log('Kakao Login Success:', response);\n    const email = response.response.email; // 이메일\n    const nickname = response.response.properties.nickname; // 닉네임\n\n    // 카카오 로그인 후 사용자 정보를 상태에 저장\n    setUserInfo({\n      email,\n      nickname,\n      provider: 'kakao'\n    });\n    setNicknameModalOpen(true); // 닉네임 입력 창 띄우기\n  };\n\n  // Kakao 로그인 실패 시 호출되는 함수\n  const handleKakaoLoginFailure = error => {\n    console.error('Kakao Login Failed:', error);\n    alert('Kakao 로그인에 실패했습니다. 다시 시도해주세요.');\n  };\n\n  // 닉네임 중복 검사 및 사용자 정보 저장\n  const handleNicknameSubmit = async () => {\n    try {\n      // 닉네임 중복 검사\n      const result = await axios.post('http://localhost:8888/api/check-nickname', {\n        nickname\n      });\n      if (result.data.exists) {\n        alert('이미 사용 중인 닉네임입니다. 다른 닉네임을 선택하세요.');\n      } else {\n        // 중복되지 않으면 사용자 정보 저장\n        const userData = {\n          ...userInfo,\n          nickname\n        };\n        await axios.post('http://localhost:8888/api/save-user', userData);\n        alert('회원가입이 완료되었습니다.');\n        setNicknameModalOpen(false); // 닉네임 입력창 닫기\n      }\n    } catch (error) {\n      console.error('Error saving nickname:', error);\n      alert('회원가입에 실패했습니다. 다시 시도해주세요.');\n    }\n  };\n\n  // 닉네임 입력 변경 핸들러\n  const handleNicknameChange = event => {\n    setNickname(event.target.value);\n  };\n\n  // 카카오 SDK 초기화\n  useEffect(() => {\n    if (window.Kakao) {\n      window.Kakao.init('ae86decbc5071f303518b916484a7076'); // 카카오 REST API 키\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      onSuccess: handleGoogleLoginSuccess,\n      onError: handleGoogleLoginFailure,\n      theme: \"outline\" // 버튼 스타일 설정 (예: outline)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(KakaoLogin, {\n      jsKey: \"ae86decbc5071f303518b916484a7076\" // 카카오 REST API 키\n      ,\n      onSuccess: handleKakaoLoginSuccess,\n      onFailure: handleKakaoLoginFailure,\n      buttonText: \"Kakao Login\" // 버튼 텍스트 설정\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), isNicknameModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nickname-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uB2C9\\uB124\\uC784\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: nickname,\n        onChange: handleNicknameChange,\n        placeholder: \"\\uB2C9\\uB124\\uC784\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNicknameSubmit,\n        children: \"\\uD655\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setNicknameModalOpen(false),\n        children: \"\\uCDE8\\uC18C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"E7q9h6XE9nYFGkP3eNH6j+uejHk=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useEffect","GoogleLogin","KakaoLogin","axios","jsxDEV","_jsxDEV","LoginPage","_s","isNicknameModalOpen","setNicknameModalOpen","userInfo","setUserInfo","nickname","setNickname","handleGoogleLoginSuccess","response","console","log","decoded","JSON","parse","atob","credential","split","email","given_name","provider","handleGoogleLoginFailure","error","alert","handleKakaoLoginSuccess","properties","handleKakaoLoginFailure","handleNicknameSubmit","result","post","data","exists","userData","handleNicknameChange","event","target","value","window","Kakao","init","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSuccess","onError","theme","jsKey","onFailure","buttonText","type","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/minju/git/todolist_front/todolist/src/Login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { GoogleLogin } from '@react-oauth/google';\r\nimport KakaoLogin from 'react-kakao-login'; // 카카오 로그인 컴포넌트\r\nimport axios from 'axios'; // axios 임포트\r\n\r\nconst LoginPage = () => {\r\n  const [isNicknameModalOpen, setNicknameModalOpen] = useState(false); // 닉네임 입력창 상태\r\n  const [userInfo, setUserInfo] = useState(null); // 로그인 후 사용자 정보 저장\r\n  const [nickname, setNickname] = useState(''); // 사용자 닉네임\r\n\r\n  // Google 로그인 성공 시 호출되는 함수\r\n  const handleGoogleLoginSuccess = async (response) => {\r\n    console.log('Google Login Success:', response);\r\n\r\n    const decoded = JSON.parse(atob(response.credential.split('.')[1])); // 구글 토큰 디코딩\r\n    const email = decoded.email;  // 이메일\r\n    const nickname = decoded.given_name; // 이름\r\n\r\n    // 구글 로그인 후 사용자 정보를 상태에 저장\r\n    setUserInfo({ email, nickname, provider: 'google' });\r\n    setNicknameModalOpen(true); // 닉네임 입력 창 띄우기\r\n  };\r\n\r\n  // Google 로그인 실패 시 호출되는 함수\r\n  const handleGoogleLoginFailure = (error) => {\r\n    console.error('Google Login Failed:', error);\r\n    alert('Google 로그인에 실패했습니다. 다시 시도해주세요.');\r\n  };\r\n\r\n  // Kakao 로그인 성공 시 호출되는 함수\r\n  const handleKakaoLoginSuccess = async (response) => {\r\n    console.log('Kakao Login Success:', response);\r\n\r\n    const email = response.response.email; // 이메일\r\n    const nickname = response.response.properties.nickname; // 닉네임\r\n\r\n    // 카카오 로그인 후 사용자 정보를 상태에 저장\r\n    setUserInfo({ email, nickname, provider: 'kakao' });\r\n    setNicknameModalOpen(true); // 닉네임 입력 창 띄우기\r\n  };\r\n\r\n  // Kakao 로그인 실패 시 호출되는 함수\r\n  const handleKakaoLoginFailure = (error) => {\r\n    console.error('Kakao Login Failed:', error);\r\n    alert('Kakao 로그인에 실패했습니다. 다시 시도해주세요.');\r\n  };\r\n\r\n  // 닉네임 중복 검사 및 사용자 정보 저장\r\n  const handleNicknameSubmit = async () => {\r\n    try {\r\n      // 닉네임 중복 검사\r\n      const result = await axios.post('http://localhost:8888/api/check-nickname', { nickname });\r\n\r\n      if (result.data.exists) {\r\n        alert('이미 사용 중인 닉네임입니다. 다른 닉네임을 선택하세요.');\r\n      } else {\r\n        // 중복되지 않으면 사용자 정보 저장\r\n        const userData = { ...userInfo, nickname };\r\n        await axios.post('http://localhost:8888/api/save-user', userData);\r\n\r\n        alert('회원가입이 완료되었습니다.');\r\n        setNicknameModalOpen(false); // 닉네임 입력창 닫기\r\n      }\r\n    } catch (error) {\r\n      console.error('Error saving nickname:', error);\r\n      alert('회원가입에 실패했습니다. 다시 시도해주세요.');\r\n    }\r\n  };\r\n\r\n  // 닉네임 입력 변경 핸들러\r\n  const handleNicknameChange = (event) => {\r\n    setNickname(event.target.value);\r\n  };\r\n\r\n  // 카카오 SDK 초기화\r\n  useEffect(() => {\r\n    if (window.Kakao) {\r\n      window.Kakao.init('ae86decbc5071f303518b916484a7076'); // 카카오 REST API 키\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Login Page</h2>\r\n\r\n      {/* Google 로그인 버튼 */}\r\n      <GoogleLogin\r\n        onSuccess={handleGoogleLoginSuccess}\r\n        onError={handleGoogleLoginFailure}\r\n        theme=\"outline\" // 버튼 스타일 설정 (예: outline)\r\n      />\r\n\r\n      {/* Kakao 로그인 버튼 */}\r\n      <KakaoLogin\r\n        jsKey=\"ae86decbc5071f303518b916484a7076\" // 카카오 REST API 키\r\n        onSuccess={handleKakaoLoginSuccess}\r\n        onFailure={handleKakaoLoginFailure}\r\n        buttonText=\"Kakao Login\" // 버튼 텍스트 설정\r\n      />\r\n\r\n      {/* 닉네임 입력창 */}\r\n      {isNicknameModalOpen && (\r\n        <div className=\"nickname-modal\">\r\n          <h3>닉네임을 입력해주세요</h3>\r\n          <input\r\n            type=\"text\"\r\n            value={nickname}\r\n            onChange={handleNicknameChange}\r\n            placeholder=\"닉네임\"\r\n          />\r\n          <button onClick={handleNicknameSubmit}>확인</button>\r\n          <button onClick={() => setNicknameModalOpen(false)}>취소</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}