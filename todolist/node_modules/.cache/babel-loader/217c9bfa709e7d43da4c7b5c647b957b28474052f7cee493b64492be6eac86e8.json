{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\minju\\\\git\\\\todolist_front\\\\todolist\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { GoogleLogin } from '@react-oauth/google';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport styles from './login.module.css';\nimport kakaoLogo from './kakao_login.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [isNicknameModalOpen, setNicknameModalOpen] = useState(false);\n  const [nickname, setNickname] = useState('');\n  const navigate = useNavigate();\n  const handleGoogleLoginSuccess = async response => {\n    try {\n      const credential = response.credential;\n      const res = await axios.post('http://localhost:8888/api/login/google', {\n        token: credential\n      });\n      if (res.data.exists) {\n        // 이미 가입된 사용자\n        sessionStorage.setItem('user', JSON.stringify(res.data.user));\n        navigate('/calendar');\n      } else {\n        // 신규 사용자 닉네임 입력\n        setNicknameModalOpen(true);\n        sessionStorage.setItem('tempUser', JSON.stringify(res.data.user)); // 임시 저장\n      }\n    } catch (error) {\n      console.error('Google 로그인 처리 실패:', error);\n      alert('로그인에 실패했습니다. 다시 시도해주세요.');\n    }\n  };\n  const handleKakaoLoginSuccess = () => {\n    if (!window.Kakao || !window.Kakao.isInitialized()) {\n      alert('Kakao SDK가 초기화되지 않았습니다.');\n      return;\n    }\n    window.Kakao.Auth.login({\n      success: async response => {\n        try {\n          const token = response.access_token;\n          const res = await axios.post('http://localhost:8888/api/login/kakao', {\n            token\n          });\n          if (res.data.exists) {\n            sessionStorage.setItem('user', JSON.stringify(res.data.user));\n            navigate('/calendar');\n          } else {\n            setNicknameModalOpen(true);\n            sessionStorage.setItem('tempUser', JSON.stringify(res.data.user));\n          }\n        } catch (error) {\n          console.error('Kakao 로그인 처리 실패:', error);\n          alert('로그인에 실패했습니다. 다시 시도해주세요.');\n        }\n      },\n      fail: error => {\n        console.error('Kakao Login Failed:', error);\n        alert('Kakao 로그인에 실패했습니다.');\n      }\n    });\n  };\n  const handleNicknameSubmit = async () => {\n    const tempUser = JSON.parse(sessionStorage.getItem('tempUser'));\n    try {\n      const result = await axios.post('http://localhost:8888/api/login/set-nickname', {\n        email: tempUser.email,\n        nickname: nickname\n      });\n      if (result.data.success) {\n        sessionStorage.removeItem('tempUser');\n        sessionStorage.setItem('user', JSON.stringify(result.data.user));\n        setNicknameModalOpen(false);\n        navigate('/calendar');\n      } else {\n        alert('닉네임 설정에 실패했습니다. 다시 시도해주세요.');\n      }\n    } catch (error) {\n      console.error('닉네임 설정 실패:', error);\n      alert('닉네임 설정 중 오류가 발생했습니다.');\n    }\n  };\n  useEffect(() => {\n    if (!window.Kakao) {\n      const script = document.createElement('script');\n      script.src = 'https://developers.kakao.com/sdk/js/kakao.min.js';\n      script.onload = () => {\n        if (window.Kakao) window.Kakao.init(process.env.REACT_APP_KAKAO_KEY);\n      };\n      document.body.appendChild(script);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles['login-container'],\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TODO-LIST\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"LOGIN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      onSuccess: handleGoogleLoginSuccess,\n      onError: () => alert('Google 로그인에 실패했습니다. 다시 시도해주세요.'),\n      theme: \"outline\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles['kakao-login-button'],\n      onClick: handleKakaoLoginSuccess,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: kakaoLogo,\n        alt: \"Kakao Login\",\n        width: \"140px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), isNicknameModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles['nickname-modal'],\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uB2C9\\uB124\\uC784\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: nickname,\n        onChange: e => setNickname(e.target.value),\n        placeholder: \"\\uB2C9\\uB124\\uC784 \\uC785\\uB825\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNicknameSubmit,\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"PndubKihtDDNfax2pbO1uOJkma8=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useEffect","GoogleLogin","axios","useNavigate","styles","kakaoLogo","jsxDEV","_jsxDEV","LoginPage","_s","isNicknameModalOpen","setNicknameModalOpen","nickname","setNickname","navigate","handleGoogleLoginSuccess","response","credential","res","post","token","data","exists","sessionStorage","setItem","JSON","stringify","user","error","console","alert","handleKakaoLoginSuccess","window","Kakao","isInitialized","Auth","login","success","access_token","fail","handleNicknameSubmit","tempUser","parse","getItem","result","email","removeItem","script","document","createElement","src","onload","init","process","env","REACT_APP_KAKAO_KEY","body","appendChild","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSuccess","onError","theme","onClick","alt","width","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/minju/git/todolist_front/todolist/src/Login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { GoogleLogin } from '@react-oauth/google';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport styles from './login.module.css';\r\nimport kakaoLogo from './kakao_login.png';\r\n\r\nconst LoginPage = () => {\r\n  const [isNicknameModalOpen, setNicknameModalOpen] = useState(false);\r\n  const [nickname, setNickname] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleGoogleLoginSuccess = async (response) => {\r\n    try {\r\n      const credential = response.credential;\r\n      const res = await axios.post('http://localhost:8888/api/login/google', { token: credential });\r\n\r\n      if (res.data.exists) {\r\n        // 이미 가입된 사용자\r\n        sessionStorage.setItem('user', JSON.stringify(res.data.user));\r\n        navigate('/calendar');\r\n      } else {\r\n        // 신규 사용자 닉네임 입력\r\n        setNicknameModalOpen(true);\r\n        sessionStorage.setItem('tempUser', JSON.stringify(res.data.user)); // 임시 저장\r\n      }\r\n    } catch (error) {\r\n      console.error('Google 로그인 처리 실패:', error);\r\n      alert('로그인에 실패했습니다. 다시 시도해주세요.');\r\n    }\r\n  };\r\n\r\n  const handleKakaoLoginSuccess = () => {\r\n    if (!window.Kakao || !window.Kakao.isInitialized()) {\r\n      alert('Kakao SDK가 초기화되지 않았습니다.');\r\n      return;\r\n    }\r\n\r\n    window.Kakao.Auth.login({\r\n      success: async (response) => {\r\n        try {\r\n          const token = response.access_token;\r\n          const res = await axios.post('http://localhost:8888/api/login/kakao', { token });\r\n\r\n          if (res.data.exists) {\r\n            sessionStorage.setItem('user', JSON.stringify(res.data.user));\r\n            navigate('/calendar');\r\n          } else {\r\n            setNicknameModalOpen(true);\r\n            sessionStorage.setItem('tempUser', JSON.stringify(res.data.user));\r\n          }\r\n        } catch (error) {\r\n          console.error('Kakao 로그인 처리 실패:', error);\r\n          alert('로그인에 실패했습니다. 다시 시도해주세요.');\r\n        }\r\n      },\r\n      fail: (error) => {\r\n        console.error('Kakao Login Failed:', error);\r\n        alert('Kakao 로그인에 실패했습니다.');\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleNicknameSubmit = async () => {\r\n    const tempUser = JSON.parse(sessionStorage.getItem('tempUser'));\r\n\r\n    try {\r\n      const result = await axios.post('http://localhost:8888/api/login/set-nickname', {\r\n        email: tempUser.email,\r\n        nickname: nickname,\r\n      });\r\n\r\n      if (result.data.success) {\r\n        sessionStorage.removeItem('tempUser');\r\n        sessionStorage.setItem('user', JSON.stringify(result.data.user));\r\n        setNicknameModalOpen(false);\r\n        navigate('/calendar');\r\n      } else {\r\n        alert('닉네임 설정에 실패했습니다. 다시 시도해주세요.');\r\n      }\r\n    } catch (error) {\r\n      console.error('닉네임 설정 실패:', error);\r\n      alert('닉네임 설정 중 오류가 발생했습니다.');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!window.Kakao) {\r\n      const script = document.createElement('script');\r\n      script.src = 'https://developers.kakao.com/sdk/js/kakao.min.js';\r\n      script.onload = () => {\r\n        if (window.Kakao) window.Kakao.init(process.env.REACT_APP_KAKAO_KEY);\r\n      };\r\n      document.body.appendChild(script);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles['login-container']}>\r\n      <h1>TODO-LIST</h1>\r\n      <h2>LOGIN</h2>\r\n\r\n      {/* Google Login */}\r\n      <GoogleLogin\r\n        onSuccess={handleGoogleLoginSuccess}\r\n        onError={() => alert('Google 로그인에 실패했습니다. 다시 시도해주세요.')}\r\n        theme=\"outline\"\r\n      />\r\n\r\n      {/* Kakao Login */}\r\n      <button className={styles['kakao-login-button']} onClick={handleKakaoLoginSuccess}>\r\n        <img src={kakaoLogo} alt=\"Kakao Login\" width=\"140px\" />\r\n      </button>\r\n\r\n      {/* Nickname Input Modal */}\r\n      {isNicknameModalOpen && (\r\n        <div className={styles['nickname-modal']}>\r\n          <h3>닉네임을 입력해주세요</h3>\r\n          <input\r\n            type=\"text\"\r\n            value={nickname}\r\n            onChange={(e) => setNickname(e.target.value)}\r\n            placeholder=\"닉네임 입력\"\r\n          />\r\n          <button onClick={handleNicknameSubmit}>회원가입</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,qBAAqB;AACjD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,SAAS,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,mBAAmB,EAAEC,oBAAoB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMe,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAMY,wBAAwB,GAAG,MAAOC,QAAQ,IAAK;IACnD,IAAI;MACF,MAAMC,UAAU,GAAGD,QAAQ,CAACC,UAAU;MACtC,MAAMC,GAAG,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAC,wCAAwC,EAAE;QAAEC,KAAK,EAAEH;MAAW,CAAC,CAAC;MAE7F,IAAIC,GAAG,CAACG,IAAI,CAACC,MAAM,EAAE;QACnB;QACAC,cAAc,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACR,GAAG,CAACG,IAAI,CAACM,IAAI,CAAC,CAAC;QAC7Db,QAAQ,CAAC,WAAW,CAAC;MACvB,CAAC,MAAM;QACL;QACAH,oBAAoB,CAAC,IAAI,CAAC;QAC1BY,cAAc,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACR,GAAG,CAACG,IAAI,CAACM,IAAI,CAAC,CAAC,CAAC,CAAC;MACrE;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MACzCE,KAAK,CAAC,yBAAyB,CAAC;IAClC;EACF,CAAC;EAED,MAAMC,uBAAuB,GAAGA,CAAA,KAAM;IACpC,IAAI,CAACC,MAAM,CAACC,KAAK,IAAI,CAACD,MAAM,CAACC,KAAK,CAACC,aAAa,CAAC,CAAC,EAAE;MAClDJ,KAAK,CAAC,yBAAyB,CAAC;MAChC;IACF;IAEAE,MAAM,CAACC,KAAK,CAACE,IAAI,CAACC,KAAK,CAAC;MACtBC,OAAO,EAAE,MAAOrB,QAAQ,IAAK;QAC3B,IAAI;UACF,MAAMI,KAAK,GAAGJ,QAAQ,CAACsB,YAAY;UACnC,MAAMpB,GAAG,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAC,uCAAuC,EAAE;YAAEC;UAAM,CAAC,CAAC;UAEhF,IAAIF,GAAG,CAACG,IAAI,CAACC,MAAM,EAAE;YACnBC,cAAc,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACR,GAAG,CAACG,IAAI,CAACM,IAAI,CAAC,CAAC;YAC7Db,QAAQ,CAAC,WAAW,CAAC;UACvB,CAAC,MAAM;YACLH,oBAAoB,CAAC,IAAI,CAAC;YAC1BY,cAAc,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACR,GAAG,CAACG,IAAI,CAACM,IAAI,CAAC,CAAC;UACnE;QACF,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;UACxCE,KAAK,CAAC,yBAAyB,CAAC;QAClC;MACF,CAAC;MACDS,IAAI,EAAGX,KAAK,IAAK;QACfC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;QAC3CE,KAAK,CAAC,oBAAoB,CAAC;MAC7B;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMU,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,MAAMC,QAAQ,GAAGhB,IAAI,CAACiB,KAAK,CAACnB,cAAc,CAACoB,OAAO,CAAC,UAAU,CAAC,CAAC;IAE/D,IAAI;MACF,MAAMC,MAAM,GAAG,MAAM1C,KAAK,CAACiB,IAAI,CAAC,8CAA8C,EAAE;QAC9E0B,KAAK,EAAEJ,QAAQ,CAACI,KAAK;QACrBjC,QAAQ,EAAEA;MACZ,CAAC,CAAC;MAEF,IAAIgC,MAAM,CAACvB,IAAI,CAACgB,OAAO,EAAE;QACvBd,cAAc,CAACuB,UAAU,CAAC,UAAU,CAAC;QACrCvB,cAAc,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACkB,MAAM,CAACvB,IAAI,CAACM,IAAI,CAAC,CAAC;QAChEhB,oBAAoB,CAAC,KAAK,CAAC;QAC3BG,QAAQ,CAAC,WAAW,CAAC;MACvB,CAAC,MAAM;QACLgB,KAAK,CAAC,4BAA4B,CAAC;MACrC;IACF,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;MAClCE,KAAK,CAAC,sBAAsB,CAAC;IAC/B;EACF,CAAC;EAED9B,SAAS,CAAC,MAAM;IACd,IAAI,CAACgC,MAAM,CAACC,KAAK,EAAE;MACjB,MAAMc,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;MAC/CF,MAAM,CAACG,GAAG,GAAG,kDAAkD;MAC/DH,MAAM,CAACI,MAAM,GAAG,MAAM;QACpB,IAAInB,MAAM,CAACC,KAAK,EAAED,MAAM,CAACC,KAAK,CAACmB,IAAI,CAACC,OAAO,CAACC,GAAG,CAACC,mBAAmB,CAAC;MACtE,CAAC;MACDP,QAAQ,CAACQ,IAAI,CAACC,WAAW,CAACV,MAAM,CAAC;IACnC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACExC,OAAA;IAAKmD,SAAS,EAAEtD,MAAM,CAAC,iBAAiB,CAAE;IAAAuD,QAAA,gBACxCpD,OAAA;MAAAoD,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBxD,OAAA;MAAAoD,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGdxD,OAAA,CAACN,WAAW;MACV+D,SAAS,EAAEjD,wBAAyB;MACpCkD,OAAO,EAAEA,CAAA,KAAMnC,KAAK,CAAC,gCAAgC,CAAE;MACvDoC,KAAK,EAAC;IAAS;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eAGFxD,OAAA;MAAQmD,SAAS,EAAEtD,MAAM,CAAC,oBAAoB,CAAE;MAAC+D,OAAO,EAAEpC,uBAAwB;MAAA4B,QAAA,eAChFpD,OAAA;QAAK2C,GAAG,EAAE7C,SAAU;QAAC+D,GAAG,EAAC,aAAa;QAACC,KAAK,EAAC;MAAO;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,EAGRrD,mBAAmB,iBAClBH,OAAA;MAAKmD,SAAS,EAAEtD,MAAM,CAAC,gBAAgB,CAAE;MAAAuD,QAAA,gBACvCpD,OAAA;QAAAoD,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpBxD,OAAA;QACE+D,IAAI,EAAC,MAAM;QACXC,KAAK,EAAE3D,QAAS;QAChB4D,QAAQ,EAAGC,CAAC,IAAK5D,WAAW,CAAC4D,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC7CI,WAAW,EAAC;MAAQ;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC,eACFxD,OAAA;QAAQ4D,OAAO,EAAE3B,oBAAqB;QAAAmB,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACtD,EAAA,CA1HID,SAAS;EAAA,QAGIL,WAAW;AAAA;AAAAyE,EAAA,GAHxBpE,SAAS;AA4Hf,eAAeA,SAAS;AAAC,IAAAoE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}