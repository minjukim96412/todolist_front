{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\minju\\\\git\\\\todolist_front\\\\todolist\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { GoogleLogin } from '@react-oauth/google';\nimport KakaoLogin from 'react-kakao-login'; // 카카오 로그인 컴포넌트\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const handleGoogleLoginSuccess = response => {\n    console.log('Google Login Success:', response);\n    // 구글 로그인 성공 후 처리 (예: 서버에 사용자 정보 저장)\n    // 서버에 전달하여 회원가입/로그인 처리\n  };\n  const handleGoogleLoginFailure = error => {\n    console.error('Google Login Failed:', error);\n    alert('Google 로그인에 실패했습니다. 다시 시도해주세요.');\n  };\n  const handleKakaoLoginSuccess = response => {\n    console.log('Kakao Login Success:', response);\n    // 카카오 로그인 성공 후 처리 (예: 서버에 사용자 정보 저장)\n    // 서버에 전달하여 회원가입/로그인 처리\n  };\n  const handleKakaoLoginFailure = error => {\n    console.error('Kakao Login Failed:', error);\n    alert('Kakao 로그인에 실패했습니다. 다시 시도해주세요.');\n  };\n  useEffect(() => {\n    // 카카오 SDK 초기화\n    if (window.Kakao) {\n      window.Kakao.init('ae86decbc5071f303518b916484a7076'); // 카카오 REST API 키\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      onSuccess: handleGoogleLoginSuccess,\n      onError: handleGoogleLoginFailure,\n      theme: \"outline\" // 버튼 스타일 설정 (예: outline)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(KakaoLogin, {\n      jsKey: \"ae86decbc5071f303518b916484a7076\" // 카카오 REST API 키\n      ,\n      onSuccess: handleKakaoLoginSuccess,\n      onFailure: handleKakaoLoginFailure,\n      buttonText: \"Kakao Login\" // 버튼 텍스트 설정\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useEffect","GoogleLogin","KakaoLogin","jsxDEV","_jsxDEV","LoginPage","_s","handleGoogleLoginSuccess","response","console","log","handleGoogleLoginFailure","error","alert","handleKakaoLoginSuccess","handleKakaoLoginFailure","window","Kakao","init","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSuccess","onError","theme","jsKey","onFailure","buttonText","_c","$RefreshReg$"],"sources":["C:/Users/minju/git/todolist_front/todolist/src/Login.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { GoogleLogin } from '@react-oauth/google';\r\nimport KakaoLogin from 'react-kakao-login'; // 카카오 로그인 컴포넌트\r\n\r\nconst LoginPage = () => {\r\n  const handleGoogleLoginSuccess = (response) => {\r\n    console.log('Google Login Success:', response);\r\n    // 구글 로그인 성공 후 처리 (예: 서버에 사용자 정보 저장)\r\n    // 서버에 전달하여 회원가입/로그인 처리\r\n  };\r\n\r\n  const handleGoogleLoginFailure = (error) => {\r\n    console.error('Google Login Failed:', error);\r\n    alert('Google 로그인에 실패했습니다. 다시 시도해주세요.');\r\n  };\r\n\r\n  const handleKakaoLoginSuccess = (response) => {\r\n    console.log('Kakao Login Success:', response);\r\n    // 카카오 로그인 성공 후 처리 (예: 서버에 사용자 정보 저장)\r\n    // 서버에 전달하여 회원가입/로그인 처리\r\n  };\r\n\r\n  const handleKakaoLoginFailure = (error) => {\r\n    console.error('Kakao Login Failed:', error);\r\n    alert('Kakao 로그인에 실패했습니다. 다시 시도해주세요.');\r\n  };\r\n\r\n  useEffect(() => {\r\n    // 카카오 SDK 초기화\r\n    if (window.Kakao) {\r\n      window.Kakao.init('ae86decbc5071f303518b916484a7076'); // 카카오 REST API 키\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Login Page</h2>\r\n      \r\n      {/* Google 로그인 */}\r\n      <GoogleLogin\r\n        onSuccess={handleGoogleLoginSuccess}\r\n        onError={handleGoogleLoginFailure}\r\n        theme=\"outline\" // 버튼 스타일 설정 (예: outline)\r\n      />\r\n\r\n      {/* Kakao 로그인 */}\r\n      <KakaoLogin\r\n        jsKey=\"ae86decbc5071f303518b916484a7076\" // 카카오 REST API 키\r\n        onSuccess={handleKakaoLoginSuccess}\r\n        onFailure={handleKakaoLoginFailure}\r\n        buttonText=\"Kakao Login\" // 버튼 텍스트 설정\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,qBAAqB;AACjD,OAAOC,UAAU,MAAM,mBAAmB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,wBAAwB,GAAIC,QAAQ,IAAK;IAC7CC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,QAAQ,CAAC;IAC9C;IACA;EACF,CAAC;EAED,MAAMG,wBAAwB,GAAIC,KAAK,IAAK;IAC1CH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5CC,KAAK,CAAC,gCAAgC,CAAC;EACzC,CAAC;EAED,MAAMC,uBAAuB,GAAIN,QAAQ,IAAK;IAC5CC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,QAAQ,CAAC;IAC7C;IACA;EACF,CAAC;EAED,MAAMO,uBAAuB,GAAIH,KAAK,IAAK;IACzCH,OAAO,CAACG,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC3CC,KAAK,CAAC,+BAA+B,CAAC;EACxC,CAAC;EAEDb,SAAS,CAAC,MAAM;IACd;IACA,IAAIgB,MAAM,CAACC,KAAK,EAAE;MAChBD,MAAM,CAACC,KAAK,CAACC,IAAI,CAAC,kCAAkC,CAAC,CAAC,CAAC;IACzD;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEd,OAAA;IAAKe,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BhB,OAAA;MAAAgB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGnBpB,OAAA,CAACH,WAAW;MACVwB,SAAS,EAAElB,wBAAyB;MACpCmB,OAAO,EAAEf,wBAAyB;MAClCgB,KAAK,EAAC,SAAS,CAAC;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,eAGFpB,OAAA,CAACF,UAAU;MACT0B,KAAK,EAAC,kCAAkC,CAAC;MAAA;MACzCH,SAAS,EAAEX,uBAAwB;MACnCe,SAAS,EAAEd,uBAAwB;MACnCe,UAAU,EAAC,aAAa,CAAC;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAClB,EAAA,CAlDID,SAAS;AAAA0B,EAAA,GAAT1B,SAAS;AAoDf,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}