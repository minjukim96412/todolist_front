{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\minju\\\\git\\\\todolist_front\\\\todolist\\\\src\\\\CreateTodo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport DatePicker from 'react-datepicker'; // react-datepicker import\nimport \"./\"; // 스타일 추가\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateTodoPage = () => {\n  _s();\n  const location = useLocation();\n  const {\n    date\n  } = location.state || {}; // 전달된 날짜 정보 받기\n  const [todoTitle, setTodoTitle] = useState('');\n  const [startDate, setStartDate] = useState(date ? new Date(date) : new Date()); // 시작일\n  const [endDate, setEndDate] = useState(new Date()); // 종료일\n\n  const handleSubmit = () => {\n    axios.post('http://localhost:8888/api/todos', {\n      date: startDate,\n      endDate: endDate,\n      title: todoTitle\n    }).then(response => {\n      // 성공 시 일정 추가 후 처리 (예: 목록 페이지로 돌아가기)\n      console.log('Todo added successfully');\n    }).catch(error => console.error('Error adding todo:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC77C\\uC815 \\uCD94\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC2DC\\uC791 \\uB0A0\\uC9DC:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: startDate,\n        onChange: date => setStartDate(date),\n        dateFormat: \"yyyy-MM-dd\",\n        className: \"date-picker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC885\\uB8CC \\uB0A0\\uC9DC:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: endDate,\n        onChange: date => setEndDate(date),\n        dateFormat: \"yyyy-MM-dd\",\n        minDate: startDate // 종료일이 시작일 이전으로 선택되지 않도록 제한\n        ,\n        className: \"date-picker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uB0A0\\uC9DC: \", startDate.toLocaleDateString(), \" ~ \", endDate.toLocaleDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: todoTitle,\n        onChange: e => setTodoTitle(e.target.value),\n        placeholder: \"\\uC77C\\uC815 \\uC81C\\uBAA9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"\\uCD94\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateTodoPage, \"I16j8MxaTMi9XSo9mEeLg2W5Wjo=\", false, function () {\n  return [useLocation];\n});\n_c = CreateTodoPage;\nexport default CreateTodoPage;\nvar _c;\n$RefreshReg$(_c, \"CreateTodoPage\");","map":{"version":3,"names":["React","useState","useLocation","axios","DatePicker","jsxDEV","_jsxDEV","CreateTodoPage","_s","location","date","state","todoTitle","setTodoTitle","startDate","setStartDate","Date","endDate","setEndDate","handleSubmit","post","title","then","response","console","log","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","selected","onChange","dateFormat","className","minDate","toLocaleDateString","type","value","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/minju/git/todolist_front/todolist/src/CreateTodo.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport DatePicker from 'react-datepicker';  // react-datepicker import\r\nimport \"./\"; // 스타일 추가\r\n\r\nconst CreateTodoPage = () => {\r\n  const location = useLocation();\r\n  const { date } = location.state || {}; // 전달된 날짜 정보 받기\r\n  const [todoTitle, setTodoTitle] = useState('');\r\n  const [startDate, setStartDate] = useState(date ? new Date(date) : new Date());  // 시작일\r\n  const [endDate, setEndDate] = useState(new Date());  // 종료일\r\n\r\n  const handleSubmit = () => {\r\n    axios.post('http://localhost:8888/api/todos', { \r\n      date: startDate, \r\n      endDate: endDate, \r\n      title: todoTitle \r\n    })\r\n    .then(response => {\r\n      // 성공 시 일정 추가 후 처리 (예: 목록 페이지로 돌아가기)\r\n      console.log('Todo added successfully');\r\n    })\r\n    .catch(error => console.error('Error adding todo:', error));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>일정 추가</h2>\r\n      \r\n      <div>\r\n        <p>시작 날짜:</p>\r\n        <DatePicker\r\n          selected={startDate}\r\n          onChange={(date) => setStartDate(date)}\r\n          dateFormat=\"yyyy-MM-dd\"\r\n          className=\"date-picker\"\r\n        />\r\n      </div>\r\n      \r\n      <div>\r\n        <p>종료 날짜:</p>\r\n        <DatePicker\r\n          selected={endDate}\r\n          onChange={(date) => setEndDate(date)}\r\n          dateFormat=\"yyyy-MM-dd\"\r\n          minDate={startDate} // 종료일이 시작일 이전으로 선택되지 않도록 제한\r\n          className=\"date-picker\"\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <p>날짜: {startDate.toLocaleDateString()} ~ {endDate.toLocaleDateString()}</p>\r\n      </div>\r\n\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          value={todoTitle}\r\n          onChange={(e) => setTodoTitle(e.target.value)}\r\n          placeholder=\"일정 제목\"\r\n        />\r\n      </div>\r\n      \r\n      <button onClick={handleSubmit}>추가</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateTodoPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}