{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\minju\\\\git\\\\todolist_front\\\\todolist\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { GoogleLogin } from '@react-oauth/google';\nimport KakaoLogin from 'react-kakao-login'; // 카카오 로그인 컴포넌트\nimport axios from 'axios'; // axios 임포트\nimport { useNavigate } from 'react-router-dom'; // 페이지 이동을 위한 훅\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [isNicknameModalOpen, setNicknameModalOpen] = useState(false); // 닉네임 입력창 상태\n  const [userInfo, setUserInfo] = useState(null); // 로그인 후 사용자 정보 저장\n  const [nickname, setNickname] = useState(''); // 사용자 닉네임\n  const navigate = useNavigate(); // 페이지 이동을 위한 네비게이트\n\n  // 사용자 정보 확인 및 처리\n  const saveUserInfo = async userData => {\n    try {\n      const apiUrl = userData.provider == 'google' ? 'http://localhost:8888/api/login/google' : 'http://localhost:8888/api/login/kakao';\n      await axios.post(apiUrl, userData);\n      alert('회원가입이 완료되었습니다.');\n      setNicknameModalOpen(false);\n      navigate('/calendar'); // 캘린더 페이지로 이동\n    } catch (error) {\n      console.error('Error saving user info:', error);\n      alert('회원가입에 실패했습니다. 다시 시도해주세요.');\n    }\n  };\n\n  // Google 로그인 성공 시 호출되는 함수\n  const handleGoogleLoginSuccess = async response => {\n    console.log('Google Login Success:', response);\n    const base64Url = response.credential.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const decoded = JSON.parse(atob(base64));\n    const email = decoded.email; // 이메일\n\n    // 사용자 존재 여부 확인\n    await saveUserInfo(email);\n    setUserInfo({\n      email,\n      nickname: decoded.given_name,\n      tokenId: decoded.sub,\n      provider: 'google'\n    });\n  };\n\n  // Kakao 로그인 성공 시 호출되는 함수\n  const handleKakaoLoginSuccess = () => {\n    if (!window.Kakao || !window.Kakao.isInitialized()) {\n      alert('Kakao SDK가 초기화되지 않았습니다.');\n      return;\n    }\n    window.Kakao.Auth.login({\n      success: async response => {\n        console.log('Kakao Login Success:', response);\n        const token = response.access_token;\n\n        // 사용자 정보 가져오기\n        try {\n          const userInfo = await window.Kakao.API.request({\n            url: '/v2/user/me'\n          });\n          const email = userInfo.kakao_account.email;\n          const nickname = userInfo.properties.nickname;\n\n          // 사용자 존재 여부 확인\n          await saveUserInfo(email);\n          setUserInfo({\n            email: email,\n            nickname: nickname,\n            tokenId: token,\n            provider: 'kakao'\n          });\n        } catch (error) {\n          console.error('Error fetching Kakao user info:', error);\n          alert('사용자 정보를 가져오는 중 오류가 발생했습니다.');\n        }\n      },\n      fail: error => {\n        console.error('Kakao Login Failed:', error);\n        alert('Kakao 로그인에 실패했습니다.');\n      }\n    });\n  };\n\n  // 닉네임 중복 검사 및 사용자 정보 저장\n  const handleNicknameSubmit = async () => {\n    try {\n      const result = await axios.post('http://localhost:8888/api/login/check-nickname', {\n        nickname\n      });\n      if (result.data.exists) {\n        alert('이미 사용 중인 닉네임입니다. 다른 닉네임을 선택하세요.');\n      } else {\n        const userData = {\n          ...userInfo,\n          nickname\n        };\n        await saveUserInfo(userData); // 사용자 정보 저장\n      }\n    } catch (error) {\n      console.error('Error saving nickname:', error);\n      alert('회원가입에 실패했습니다. 다시 시도해주세요.');\n    }\n  };\n\n  // 닉네임 입력 변경 핸들러\n  const handleNicknameChange = event => {\n    setNickname(event.target.value);\n  };\n\n  // 카카오 SDK 초기화\n  useEffect(() => {\n    if (!window.Kakao) {\n      const script = document.createElement('script');\n      script.src = 'https://developers.kakao.com/sdk/js/kakao.min.js';\n      script.async = true;\n      script.onload = () => {\n        if (window.Kakao) {\n          window.Kakao.init(process.env.REACT_APP_KAKAO_KEY);\n          console.log('Kakao SDK initialized');\n        }\n      };\n      document.body.appendChild(script);\n      return () => {\n        document.body.removeChild(script);\n      };\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      onSuccess: handleGoogleLoginSuccess,\n      onError: () => alert('Google 로그인에 실패했습니다. 다시 시도해주세요.'),\n      theme: \"outline\" // 버튼 스타일 설정 (예: outline)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(KakaoLogin, {\n      jsKey: process.env.REACT_APP_KAKAO_KEY,\n      onSuccess: handleKakaoLoginSuccess,\n      onFailure: () => alert('Kakao 로그인에 실패했습니다. 다시 시도해주세요.'),\n      buttonText: \"Kakao Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), isNicknameModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nickname-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uB2C9\\uB124\\uC784\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: nickname,\n        onChange: handleNicknameChange,\n        placeholder: \"\\uB2C9\\uB124\\uC784\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNicknameSubmit,\n        children: \"\\uD655\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setNicknameModalOpen(false),\n        children: \"\\uCDE8\\uC18C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"V7M0vT+ViyiTfoLqvwnx+5l/pKU=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useEffect","GoogleLogin","KakaoLogin","axios","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","isNicknameModalOpen","setNicknameModalOpen","userInfo","setUserInfo","nickname","setNickname","navigate","saveUserInfo","userData","apiUrl","provider","post","alert","error","console","handleGoogleLoginSuccess","response","log","base64Url","credential","split","base64","replace","decoded","JSON","parse","atob","email","given_name","tokenId","sub","handleKakaoLoginSuccess","window","Kakao","isInitialized","Auth","login","success","token","access_token","API","request","url","kakao_account","properties","fail","handleNicknameSubmit","result","data","exists","handleNicknameChange","event","target","value","script","document","createElement","src","async","onload","init","process","env","REACT_APP_KAKAO_KEY","body","appendChild","removeChild","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSuccess","onError","theme","jsKey","onFailure","buttonText","type","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/minju/git/todolist_front/todolist/src/Login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { GoogleLogin } from '@react-oauth/google';\r\nimport KakaoLogin from 'react-kakao-login'; // 카카오 로그인 컴포넌트\r\nimport axios from 'axios'; // axios 임포트\r\nimport { useNavigate } from 'react-router-dom'; // 페이지 이동을 위한 훅\r\n\r\nconst LoginPage = () => {\r\n  const [isNicknameModalOpen, setNicknameModalOpen] = useState(false); // 닉네임 입력창 상태\r\n  const [userInfo, setUserInfo] = useState(null); // 로그인 후 사용자 정보 저장\r\n  const [nickname, setNickname] = useState(''); // 사용자 닉네임\r\n  const navigate = useNavigate(); // 페이지 이동을 위한 네비게이트\r\n\r\n  // 사용자 정보 확인 및 처리\r\n  const saveUserInfo = async (userData) => {\r\n    try {\r\n      const apiUrl = userData.provider == 'google'\r\n        ? 'http://localhost:8888/api/login/google'\r\n        : 'http://localhost:8888/api/login/kakao';\r\n  \r\n      await axios.post(apiUrl, userData);\r\n      alert('회원가입이 완료되었습니다.');\r\n      setNicknameModalOpen(false);\r\n      navigate('/calendar'); // 캘린더 페이지로 이동\r\n    } catch (error) {\r\n      console.error('Error saving user info:', error);\r\n      alert('회원가입에 실패했습니다. 다시 시도해주세요.');\r\n    }\r\n  };\r\n  \r\n\r\n  // Google 로그인 성공 시 호출되는 함수\r\n  const handleGoogleLoginSuccess = async (response) => {\r\n    console.log('Google Login Success:', response);\r\n  \r\n    const base64Url = response.credential.split('.')[1];\r\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n    const decoded = JSON.parse(atob(base64));\r\n    const email = decoded.email; // 이메일\r\n  \r\n    // 사용자 존재 여부 확인\r\n    await saveUserInfo(email);\r\n  \r\n    setUserInfo({\r\n      email,\r\n      nickname: decoded.given_name,\r\n      tokenId: decoded.sub,\r\n      provider: 'google',\r\n    });\r\n  };\r\n\r\n  // Kakao 로그인 성공 시 호출되는 함수\r\n  const handleKakaoLoginSuccess = () => {\r\n    if (!window.Kakao || !window.Kakao.isInitialized()) {\r\n      alert('Kakao SDK가 초기화되지 않았습니다.');\r\n      return;\r\n    }\r\n  \r\n    window.Kakao.Auth.login({\r\n      success: async (response) => {\r\n        console.log('Kakao Login Success:', response);\r\n        const token = response.access_token;\r\n  \r\n        // 사용자 정보 가져오기\r\n        try {\r\n          const userInfo = await window.Kakao.API.request({\r\n            url: '/v2/user/me',\r\n          });\r\n  \r\n          const email = userInfo.kakao_account.email;\r\n          const nickname = userInfo.properties.nickname;\r\n  \r\n          // 사용자 존재 여부 확인\r\n          await saveUserInfo(email);\r\n          setUserInfo({\r\n            email: email,\r\n            nickname: nickname,\r\n            tokenId: token,\r\n            provider: 'kakao',\r\n          });\r\n        } catch (error) {\r\n          console.error('Error fetching Kakao user info:', error);\r\n          alert('사용자 정보를 가져오는 중 오류가 발생했습니다.');\r\n        }\r\n      },\r\n      fail: (error) => {\r\n        console.error('Kakao Login Failed:', error);\r\n        alert('Kakao 로그인에 실패했습니다.');\r\n      },\r\n    });\r\n  };\r\n  \r\n  // 닉네임 중복 검사 및 사용자 정보 저장\r\n  const handleNicknameSubmit = async () => {\r\n    try {\r\n      const result = await axios.post('http://localhost:8888/api/login/check-nickname', { nickname });\r\n  \r\n      if (result.data.exists) {\r\n        alert('이미 사용 중인 닉네임입니다. 다른 닉네임을 선택하세요.');\r\n      } else {\r\n        const userData = { ...userInfo, nickname };\r\n        await saveUserInfo(userData); // 사용자 정보 저장\r\n      }\r\n    } catch (error) {\r\n      console.error('Error saving nickname:', error);\r\n      alert('회원가입에 실패했습니다. 다시 시도해주세요.');\r\n    }\r\n  };\r\n  \r\n\r\n  // 닉네임 입력 변경 핸들러\r\n  const handleNicknameChange = (event) => {\r\n    setNickname(event.target.value);\r\n  };\r\n\r\n  // 카카오 SDK 초기화\r\n  useEffect(() => {\r\n    if (!window.Kakao) {\r\n      const script = document.createElement('script');\r\n      script.src = 'https://developers.kakao.com/sdk/js/kakao.min.js';\r\n      script.async = true;\r\n      script.onload = () => {\r\n        if (window.Kakao) {\r\n          window.Kakao.init(process.env.REACT_APP_KAKAO_KEY);\r\n          console.log('Kakao SDK initialized');\r\n        }\r\n      };\r\n      document.body.appendChild(script);\r\n      return () => {\r\n        document.body.removeChild(script);\r\n      };\r\n    }\r\n  }, []);\r\n  \r\n  \r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Login Page</h2>\r\n\r\n      {/* Google 로그인 버튼 */}\r\n      <GoogleLogin\r\n        onSuccess={handleGoogleLoginSuccess}\r\n        onError={() => alert('Google 로그인에 실패했습니다. 다시 시도해주세요.')}\r\n        theme=\"outline\" // 버튼 스타일 설정 (예: outline)\r\n      />\r\n\r\n      {/* Kakao 로그인 버튼 */}\r\n      <KakaoLogin\r\n        jsKey={process.env.REACT_APP_KAKAO_KEY}\r\n        onSuccess={handleKakaoLoginSuccess}\r\n        onFailure={() => alert('Kakao 로그인에 실패했습니다. 다시 시도해주세요.')}\r\n        buttonText=\"Kakao Login\"\r\n      />\r\n\r\n      {/* 닉네임 입력창 */}\r\n      {isNicknameModalOpen && (\r\n        <div className=\"nickname-modal\">\r\n          <h3>닉네임을 입력해주세요</h3>\r\n          <input\r\n            type=\"text\"\r\n            value={nickname}\r\n            onChange={handleNicknameChange}\r\n            placeholder=\"닉네임\"\r\n          />\r\n          <button onClick={handleNicknameSubmit}>확인</button>\r\n          <button onClick={() => setNicknameModalOpen(false)}>취소</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}