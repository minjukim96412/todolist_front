{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\minju\\\\git\\\\todolist_front\\\\todolist\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { GoogleLogin } from '@react-oauth/google';\nimport KakaoLogin from 'react-kakao-login'; // 카카오 로그인 컴포넌트\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const handleGoogleLoginSuccess = response => {\n    console.log('Google Login Success:', response);\n    // 구글 로그인 성공 후 처리 (예: 서버에 사용자 정보 저장)\n  };\n  const handleGoogleLoginFailure = error => {\n    console.error('Google Login Failed:', error);\n  };\n  const handleKakaoLoginSuccess = response => {\n    console.log('Kakao Login Success:', response);\n    // 카카오 로그인 성공 후 처리 (예: 서버에 사용자 정보 저장)\n  };\n  const handleKakaoLoginFailure = error => {\n    console.error('Kakao Login Failed:', error);\n  };\n  useEffect(() => {\n    // 카카오 SDK 초기화\n    if (window.Kakao) {\n      window.Kakao.init('YOUR_KAKAO_REST_API_KEY'); // 카카오 REST API 키\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      onSuccess: handleGoogleLoginSuccess,\n      onError: handleGoogleLoginFailure\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(KakaoLogin, {\n      jsKey: \"YOUR_KAKAO_REST_API_KEY\" // 카카오 REST API 키\n      ,\n      onSuccess: handleKakaoLoginSuccess,\n      onFailure: handleKakaoLoginFailure\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useEffect","GoogleLogin","KakaoLogin","jsxDEV","_jsxDEV","LoginPage","_s","handleGoogleLoginSuccess","response","console","log","handleGoogleLoginFailure","error","handleKakaoLoginSuccess","handleKakaoLoginFailure","window","Kakao","init","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSuccess","onError","jsKey","onFailure","_c","$RefreshReg$"],"sources":["C:/Users/minju/git/todolist_front/todolist/src/Login.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { GoogleLogin } from '@react-oauth/google';\r\nimport KakaoLogin from 'react-kakao-login'; // 카카오 로그인 컴포넌트\r\n\r\nconst LoginPage = () => {\r\n  const handleGoogleLoginSuccess = (response) => {\r\n    console.log('Google Login Success:', response);\r\n    // 구글 로그인 성공 후 처리 (예: 서버에 사용자 정보 저장)\r\n  };\r\n\r\n  const handleGoogleLoginFailure = (error) => {\r\n    console.error('Google Login Failed:', error);\r\n  };\r\n\r\n  const handleKakaoLoginSuccess = (response) => {\r\n    console.log('Kakao Login Success:', response);\r\n    // 카카오 로그인 성공 후 처리 (예: 서버에 사용자 정보 저장)\r\n  };\r\n\r\n  const handleKakaoLoginFailure = (error) => {\r\n    console.error('Kakao Login Failed:', error);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // 카카오 SDK 초기화\r\n    if (window.Kakao) {\r\n      window.Kakao.init('YOUR_KAKAO_REST_API_KEY'); // 카카오 REST API 키\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Login Page</h2>\r\n      \r\n      {/* Google 로그인 */}\r\n      <GoogleLogin\r\n        onSuccess={handleGoogleLoginSuccess}\r\n        onError={handleGoogleLoginFailure}\r\n      />\r\n\r\n      {/* Kakao 로그인 */}\r\n      <KakaoLogin\r\n        jsKey=\"YOUR_KAKAO_REST_API_KEY\" // 카카오 REST API 키\r\n        onSuccess={handleKakaoLoginSuccess}\r\n        onFailure={handleKakaoLoginFailure}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,qBAAqB;AACjD,OAAOC,UAAU,MAAM,mBAAmB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,wBAAwB,GAAIC,QAAQ,IAAK;IAC7CC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,QAAQ,CAAC;IAC9C;EACF,CAAC;EAED,MAAMG,wBAAwB,GAAIC,KAAK,IAAK;IAC1CH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;EAC9C,CAAC;EAED,MAAMC,uBAAuB,GAAIL,QAAQ,IAAK;IAC5CC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,QAAQ,CAAC;IAC7C;EACF,CAAC;EAED,MAAMM,uBAAuB,GAAIF,KAAK,IAAK;IACzCH,OAAO,CAACG,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;EAC7C,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACd;IACA,IAAIe,MAAM,CAACC,KAAK,EAAE;MAChBD,MAAM,CAACC,KAAK,CAACC,IAAI,CAAC,yBAAyB,CAAC,CAAC,CAAC;IAChD;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,OAAA;IAAKc,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9Bf,OAAA;MAAAe,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGnBnB,OAAA,CAACH,WAAW;MACVuB,SAAS,EAAEjB,wBAAyB;MACpCkB,OAAO,EAAEd;IAAyB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eAGFnB,OAAA,CAACF,UAAU;MACTwB,KAAK,EAAC,yBAAyB,CAAC;MAAA;MAChCF,SAAS,EAAEX,uBAAwB;MACnCc,SAAS,EAAEb;IAAwB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACjB,EAAA,CA5CID,SAAS;AAAAuB,EAAA,GAATvB,SAAS;AA8Cf,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}