{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\minju\\\\git\\\\todolist_front\\\\todolist\\\\src\\\\CreateTodo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateTodoPage = () => {\n  _s();\n  const location = useLocation();\n  const {\n    date\n  } = location.state || {}; // 전달된 날짜 정보 받기\n  const [todoTitle, setTodoTitle] = useState('');\n  const handleSubmit = () => {\n    axios.post('http://localhost:8888/api/todos', {\n      date: date,\n      title: todoTitle\n    }).then(response => {\n      // 성공 시 일정 추가 후 처리 (예: 목록 페이지로 돌아가기)\n    }).catch(error => console.error('Error adding todo:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC77C\\uC815 \\uCD94\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uB0A0\\uC9DC: \", date ? date.toLocaleDateString() : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: todoTitle,\n      onChange: e => setTodoTitle(e.target.value),\n      placeholder: \"\\uC77C\\uC815 \\uC81C\\uBAA9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"\\uCD94\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateTodoPage, \"tb275YBbd0twcOOHrFwEQAWa5z4=\", false, function () {\n  return [useLocation];\n});\n_c = CreateTodoPage;\nexport default CreateTodoPage;\nvar _c;\n$RefreshReg$(_c, \"CreateTodoPage\");","map":{"version":3,"names":["React","useState","useLocation","axios","jsxDEV","_jsxDEV","CreateTodoPage","_s","location","date","state","todoTitle","setTodoTitle","handleSubmit","post","title","then","response","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleDateString","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/minju/git/todolist_front/todolist/src/CreateTodo.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst CreateTodoPage = () => {\r\n  const location = useLocation();\r\n  const { date } = location.state || {}; // 전달된 날짜 정보 받기\r\n  const [todoTitle, setTodoTitle] = useState('');\r\n\r\n  const handleSubmit = () => {\r\n    axios.post('http://localhost:8888/api/todos', { date: date, title: todoTitle })\r\n      .then(response => {\r\n        // 성공 시 일정 추가 후 처리 (예: 목록 페이지로 돌아가기)\r\n      })\r\n      .catch(error => console.error('Error adding todo:', error));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>일정 추가</h2>\r\n      <p>날짜: {date ? date.toLocaleDateString() : ''}</p>\r\n      <input\r\n        type=\"text\"\r\n        value={todoTitle}\r\n        onChange={(e) => setTodoTitle(e.target.value)}\r\n        placeholder=\"일정 제목\"\r\n      />\r\n      <button onClick={handleSubmit}>추가</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateTodoPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEO;EAAK,CAAC,GAAGD,QAAQ,CAACE,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC;EACvC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMY,YAAY,GAAGA,CAAA,KAAM;IACzBV,KAAK,CAACW,IAAI,CAAC,iCAAiC,EAAE;MAAEL,IAAI,EAAEA,IAAI;MAAEM,KAAK,EAAEJ;IAAU,CAAC,CAAC,CAC5EK,IAAI,CAACC,QAAQ,IAAI;MAChB;IAAA,CACD,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC,CAAC;EAC/D,CAAC;EAED,oBACEd,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdpB,OAAA;MAAAgB,QAAA,GAAG,gBAAI,EAACZ,IAAI,GAAGA,IAAI,CAACiB,kBAAkB,CAAC,CAAC,GAAG,EAAE;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClDpB,OAAA;MACEsB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEjB,SAAU;MACjBkB,QAAQ,EAAGC,CAAC,IAAKlB,YAAY,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC9CI,WAAW,EAAC;IAAO;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eACFpB,OAAA;MAAQ4B,OAAO,EAAEpB,YAAa;MAAAQ,QAAA,EAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV,CAAC;AAAClB,EAAA,CA1BID,cAAc;EAAA,QACDJ,WAAW;AAAA;AAAAgC,EAAA,GADxB5B,cAAc;AA4BpB,eAAeA,cAAc;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}