{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\minju\\\\git\\\\todolist_front\\\\todolist\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { GoogleLogin } from '@react-oauth/google';\nimport axios from 'axios'; // axios 임포트\nimport { useNavigate } from 'react-router-dom'; // 페이지 이동을 위한 훅\nimport styles from './login.module.css'; // CSS Module 임포트\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [isNicknameModalOpen, setNicknameModalOpen] = useState(false); // 닉네임 입력창 상태\n  const [userInfo, setUserInfo] = useState(null); // 로그인 후 사용자 정보 저장\n  const [nickname, setNickname] = useState(''); // 사용자 닉네임\n  const navigate = useNavigate(); // 페이지 이동을 위한 네비게이트\n\n  const saveUserInfo = async userData => {\n    try {\n      const apiUrl = userData.provider === 'google' ? 'http://localhost:8888/api/login/google' : 'http://localhost:8888/api/login/kakao';\n      await axios.post(apiUrl, userData);\n      alert('회원가입이 완료되었습니다.');\n      setNicknameModalOpen(false); // 닉네임 입력창 닫기\n      navigate('/calendar'); // 캘린더 페이지로 이동\n    } catch (error) {\n      console.error('Error saving user info:', error);\n      alert('회원가입에 실패했습니다. 다시 시도해주세요.');\n    }\n  };\n  const handleGoogleLoginSuccess = async response => {\n    const base64Url = response.credential.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const decoded = JSON.parse(atob(base64));\n    const email = decoded.email;\n    const nickname = decoded.given_name;\n    setUserInfo({\n      email,\n      nickname,\n      tokenId: decoded.sub,\n      provider: 'google'\n    });\n    const userExists = await checkIfUserExists(email);\n    if (userExists) {\n      alert('이미 가입된 사용자입니다.');\n      navigate('/calendar');\n    } else {\n      setNicknameModalOpen(true);\n    }\n  };\n  const handleKakaoLoginSuccess = async () => {\n    if (!window.Kakao || !window.Kakao.isInitialized()) {\n      alert('Kakao SDK가 초기화되지 않았습니다.');\n      return;\n    }\n    window.Kakao.Auth.login({\n      success: async response => {\n        const token = response.access_token;\n        try {\n          const userInfo = await window.Kakao.API.request({\n            url: '/v2/user/me'\n          });\n          const email = userInfo.kakao_account.email;\n          setUserInfo({\n            email: email,\n            tokenId: token,\n            provider: 'kakao'\n          });\n          const userExists = await checkIfUserExists(email);\n          if (userExists) {\n            alert('이미 가입된 사용자입니다.');\n            navigate('/calendar');\n          } else {\n            setNicknameModalOpen(true);\n          }\n        } catch (error) {\n          console.error('Error fetching Kakao user info:', error);\n          alert('사용자 정보를 가져오는 중 오류가 발생했습니다.');\n        }\n      },\n      fail: error => {\n        console.error('Kakao Login Failed:', error);\n        alert('Kakao 로그인에 실패했습니다.');\n      }\n    });\n  };\n  const checkIfUserExists = async email => {\n    try {\n      const response = await axios.post('http://localhost:8888/api/login/check-user', {\n        email\n      });\n      return response.data.exists;\n    } catch (error) {\n      console.error('Error checking if user exists:', error);\n      alert('사용자 확인에 실패했습니다.');\n      return false;\n    }\n  };\n  const handleNicknameChange = event => {\n    setNickname(event.target.value);\n  };\n  const handleNicknameSubmit = async () => {\n    try {\n      const result = await axios.post('http://localhost:8888/api/login/check-nickname', {\n        nickname\n      });\n      if (result.data.exists) {\n        alert('이미 사용 중인 닉네임입니다. 다른 닉네임을 선택하세요.');\n      } else {\n        const userData = {\n          ...userInfo,\n          nickname\n        };\n        await saveUserInfo(userData);\n      }\n    } catch (error) {\n      console.error('Error saving nickname:', error);\n      alert('회원가입에 실패했습니다. 다시 시도해주세요.');\n    }\n  };\n  useEffect(() => {\n    if (!window.Kakao) {\n      const script = document.createElement('script');\n      script.src = 'https://developers.kakao.com/sdk/js/kakao.min.js';\n      script.async = true;\n      script.onload = () => {\n        if (window.Kakao) {\n          window.Kakao.init(process.env.REACT_APP_KAKAO_KEY);\n        }\n      };\n      document.body.appendChild(script);\n      return () => {\n        document.body.removeChild(script);\n      };\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles['login-container'],\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      onSuccess: handleGoogleLoginSuccess,\n      onError: () => alert('Google 로그인에 실패했습니다. 다시 시도해주세요.'),\n      theme: \"outline\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"kakao-login-btn\",\n      onClick: handleKakaoLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"kakao-icon.png\",\n        alt: \"\\uCE74\\uCE74\\uC624 \\uC544\\uC774\\uCF58\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 7\n      }, this), \"\\uCE74\\uCE74\\uC624 \\uB85C\\uADF8\\uC778\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles['kakao-login-button'],\n      onClick: handleKakaoLoginSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), isNicknameModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles['nickname-modal'],\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uB2C9\\uB124\\uC784\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: nickname,\n        onChange: handleNicknameChange,\n        placeholder: \"\\uB2C9\\uB124\\uC784 \\uC785\\uB825\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNicknameSubmit,\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cancel\",\n        onClick: () => setNicknameModalOpen(false),\n        children: \"\\uCDE8\\uC18C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"V7M0vT+ViyiTfoLqvwnx+5l/pKU=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useEffect","GoogleLogin","axios","useNavigate","styles","jsxDEV","_jsxDEV","LoginPage","_s","isNicknameModalOpen","setNicknameModalOpen","userInfo","setUserInfo","nickname","setNickname","navigate","saveUserInfo","userData","apiUrl","provider","post","alert","error","console","handleGoogleLoginSuccess","response","base64Url","credential","split","base64","replace","decoded","JSON","parse","atob","email","given_name","tokenId","sub","userExists","checkIfUserExists","handleKakaoLoginSuccess","window","Kakao","isInitialized","Auth","login","success","token","access_token","API","request","url","kakao_account","fail","data","exists","handleNicknameChange","event","target","value","handleNicknameSubmit","result","script","document","createElement","src","async","onload","init","process","env","REACT_APP_KAKAO_KEY","body","appendChild","removeChild","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSuccess","onError","theme","onClick","handleKakaoLogin","alt","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/minju/git/todolist_front/todolist/src/Login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { GoogleLogin } from '@react-oauth/google';\r\nimport axios from 'axios'; // axios 임포트\r\nimport { useNavigate } from 'react-router-dom'; // 페이지 이동을 위한 훅\r\nimport styles from './login.module.css'; // CSS Module 임포트\r\n\r\nconst LoginPage = () => {\r\n  const [isNicknameModalOpen, setNicknameModalOpen] = useState(false); // 닉네임 입력창 상태\r\n  const [userInfo, setUserInfo] = useState(null); // 로그인 후 사용자 정보 저장\r\n  const [nickname, setNickname] = useState(''); // 사용자 닉네임\r\n  const navigate = useNavigate(); // 페이지 이동을 위한 네비게이트\r\n\r\n  const saveUserInfo = async (userData) => {\r\n    try {\r\n      const apiUrl = userData.provider === 'google'\r\n        ? 'http://localhost:8888/api/login/google'\r\n        : 'http://localhost:8888/api/login/kakao';\r\n  \r\n      await axios.post(apiUrl, userData);\r\n      alert('회원가입이 완료되었습니다.');\r\n      setNicknameModalOpen(false); // 닉네임 입력창 닫기\r\n      navigate('/calendar'); // 캘린더 페이지로 이동\r\n    } catch (error) {\r\n      console.error('Error saving user info:', error);\r\n      alert('회원가입에 실패했습니다. 다시 시도해주세요.');\r\n    }\r\n  };\r\n\r\n  const handleGoogleLoginSuccess = async (response) => {\r\n    const base64Url = response.credential.split('.')[1];\r\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n    const decoded = JSON.parse(atob(base64));\r\n    const email = decoded.email;\r\n    const nickname = decoded.given_name;\r\n  \r\n    setUserInfo({\r\n      email,\r\n      nickname,\r\n      tokenId: decoded.sub,\r\n      provider: 'google',\r\n    });\r\n\r\n    const userExists = await checkIfUserExists(email);\r\n\r\n    if (userExists) {\r\n      alert('이미 가입된 사용자입니다.');\r\n      navigate('/calendar');\r\n    } else {\r\n      setNicknameModalOpen(true);\r\n    }\r\n  };\r\n\r\n  const handleKakaoLoginSuccess = async () => {\r\n    if (!window.Kakao || !window.Kakao.isInitialized()) {\r\n      alert('Kakao SDK가 초기화되지 않았습니다.');\r\n      return;\r\n    }\r\n\r\n    window.Kakao.Auth.login({\r\n      success: async (response) => {\r\n        const token = response.access_token;\r\n\r\n        try {\r\n          const userInfo = await window.Kakao.API.request({\r\n            url: '/v2/user/me',\r\n          });\r\n\r\n          const email = userInfo.kakao_account.email;\r\n\r\n          setUserInfo({\r\n            email: email,\r\n            tokenId: token,\r\n            provider: 'kakao',\r\n          });\r\n\r\n          const userExists = await checkIfUserExists(email);\r\n\r\n          if (userExists) {\r\n            alert('이미 가입된 사용자입니다.');\r\n            navigate('/calendar');\r\n          } else {\r\n            setNicknameModalOpen(true);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching Kakao user info:', error);\r\n          alert('사용자 정보를 가져오는 중 오류가 발생했습니다.');\r\n        }\r\n      },\r\n      fail: (error) => {\r\n        console.error('Kakao Login Failed:', error);\r\n        alert('Kakao 로그인에 실패했습니다.');\r\n      },\r\n    });\r\n  };\r\n\r\n  const checkIfUserExists = async (email) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:8888/api/login/check-user', { email });\r\n      return response.data.exists;\r\n    } catch (error) {\r\n      console.error('Error checking if user exists:', error);\r\n      alert('사용자 확인에 실패했습니다.');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleNicknameChange = (event) => {\r\n    setNickname(event.target.value);\r\n  };\r\n\r\n  const handleNicknameSubmit = async () => {\r\n    try {\r\n      const result = await axios.post('http://localhost:8888/api/login/check-nickname', { nickname });\r\n\r\n      if (result.data.exists) {\r\n        alert('이미 사용 중인 닉네임입니다. 다른 닉네임을 선택하세요.');\r\n      } else {\r\n        const userData = { ...userInfo, nickname };\r\n        await saveUserInfo(userData);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error saving nickname:', error);\r\n      alert('회원가입에 실패했습니다. 다시 시도해주세요.');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!window.Kakao) {\r\n      const script = document.createElement('script');\r\n      script.src = 'https://developers.kakao.com/sdk/js/kakao.min.js';\r\n      script.async = true;\r\n      script.onload = () => {\r\n        if (window.Kakao) {\r\n          window.Kakao.init(process.env.REACT_APP_KAKAO_KEY);\r\n        }\r\n      };\r\n      document.body.appendChild(script);\r\n      return () => {\r\n        document.body.removeChild(script);\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles['login-container']}>\r\n      <h2>Login Page</h2>\r\n\r\n      <GoogleLogin\r\n        onSuccess={handleGoogleLoginSuccess}\r\n        onError={() => alert('Google 로그인에 실패했습니다. 다시 시도해주세요.')}\r\n        theme=\"outline\"\r\n      />\r\n\r\n      <button className=\"kakao-login-btn\" onClick={handleKakaoLogin}>\r\n      <img src=\"kakao-icon.png\" alt=\"카카오 아이콘\" />\r\n      카카오 로그인\r\n    </button>\r\n\r\n      <button className={styles['kakao-login-button']} onClick={handleKakaoLoginSuccess}></button>\r\n\r\n      {isNicknameModalOpen && (\r\n        <div className={styles['nickname-modal']}>\r\n          <h3>닉네임을 입력해주세요</h3>\r\n          <input \r\n            type=\"text\" \r\n            value={nickname} \r\n            onChange={handleNicknameChange} \r\n            placeholder=\"닉네임 입력\"\r\n          />\r\n          <button onClick={handleNicknameSubmit}>회원가입</button>\r\n          <button className=\"cancel\" onClick={() => setNicknameModalOpen(false)}>취소</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}